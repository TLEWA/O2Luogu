// 定义样式节点
// 每一个样式节点都是一个对象，包含了样式的所有信息
// 样式节点存在继承关系，样式节点可以一个父节点
// 构造样式树的过程中，会根据继承关系，将样式节点的信息合并到一起

// 结构：样式树上挂载样式节点，样式节点上挂载样式数据，在树上搜索时合并样式数据然后将样式注册

	// 定义样式数据类
	// 样式数据类的构造函数
	make_Style_Data(style_type=null,style_data=null) // 传入样式数据的类型和数据
		// 一个完整的样式数据应该至少含有：
		// 1. 样式类型
		// 2. 样式数据的键值对

		Style = {
			object: "Style_Data",
			type: style_type,
			data: style_data
		}
		return Style

	// 定义样式节点类
	// 样式节点类的构造函数
	Style_Node(style_map,style_selector=null,style_type=null) // 传入样式节点的类型和数据
		// 一个完整的样式节点应该至少含有：
		// 1. 样式数据表
		// 2. 样式对应的选择器
		// 3. 样式在什么网址下生效

		Style = {
			object: "Style_Node",
			type: style_type,
			selector: style_selector,
			data: style_map // map 的 key 是 url，value 是样式数据
		}
		return Style
